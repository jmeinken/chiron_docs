# 4. Manually Edit the Data Dictionary

Here are some more things you might want to do after autocreating your dataset.

<hr>

## Define Concept Relationships

By default, every subcollection you create in your dataset will have a many:1 or many:many relationship to
the subject collection.

But there can also be relationships between subcollections. For example, you might have a `visit`
collection and a `procedure` collection where every procedure is associated with one visit. Use the
`ConceptRelationship` model to define these relationships. They must be set manually, they do not get autocreated.

<hr>

## Create Calculated Fields

Follow this guideline to choose how to implement a calculated field.

### 1. Single source

**Is all of the input data you need for your calculated concept coming from the same source in the same record?**

Use a custom ETL processor associated with the same source collection as your input data.

*EXAMPLE:* {ref}`example1`


### 2. Mutiple sources

If the input data for your calculated concept is coming from multiple sources, the approach in
step 1 won't work because no source will have all the data you need.

Instead, we load all the sources containing our input data first, then we will create a new source
that iterates a Chiron collection itself and loads the calculated value back into the collection.
This new source has to run after our input data sources so that the data is already loaded.

**Are all of the input concepts in the subject collection?**

After the sources for the input concepts are loaded, we can use the `SourceSelf` processor to iterate the subject
colection.

*EXAMPLE:* {ref}`example2`

**Are all of the input concepts going into a subcollection (and associated subject)?**

We can use the `SourceSelfSubdoc` processor to iterate the subcollection. For each subcollection
record, it will also grab the related subject document from the subject collection.

*EXAMPLE:* {ref}`example3`

In some situations, the calculated field might actually be comparing data longitudinally. For example,
you might want to calculate whether a patient's condition has improved or worsened by comparing each
visit to the previous visit. Again we can use the `SourceSelfSubdoc` processor, but we need to
provide the additional argument `include_related_subdocs=True`.

*EXAMPLE:* {ref}`example4`

